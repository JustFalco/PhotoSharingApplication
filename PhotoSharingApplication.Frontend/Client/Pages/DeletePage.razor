@page "/photos/delete/{id:int}"

@using PhotoSharingApplication.Shared.Entities
@using PhotoSharingApplication.Shared.Interfaces
@inject IPhotosService PhotoService
@inject NavigationManager navigationManager

<PageTitle>Delete Photo @photo?.Title</PageTitle>
@if (photo is null) {
  <p>...Loading...</p>
} else {
  <article>
    <p>@photo.Id</p>
    <p>@photo.Title</p>
    <p>@photo.Description</p>
    <p>@photo.CreatedDate.ToShortDateString()</p>
    <p><img src="@(photo.PhotoFile is null ? "" : $"data:{photo.ImageMimeType};base64,{Convert.ToBase64String(photo.PhotoFile)}")" /></p>
    <div>
      <button @onclick="DeleteConfirm">Confirm Deletion</button>
    </div>
  </article>
}

@code {
  [Parameter]
  public int Id { get; set; }

  Photo? photo;

  protected override async Task OnInitializedAsync()
  {
    photo = await PhotoService.FindAsync(Id);
  }

  private async Task DeleteConfirm(MouseEventArgs e) {
    await PhotoService.RemoveAsync(Id);
    navigationManager.NavigateTo("/photos/all");
  }
}